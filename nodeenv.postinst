#!/bin/sh
set -e

# set to empty to enable verbose output
DEBUG=:
$DEBUG set -x

# dh-virtualenv install root (XXX: any way for debhelper to insert this?)
install_dir=/usr/share/python

safe_interpreter_update() {
    for i in python ${pythonX_Y%.*} ${pythonX_Y}; do
        interpreter_path="$install_dir/$pkgname/bin/$i"

        # skip any symlinks, and make sure we have an existing target
        test ! -L "$interpreter_path" || continue
        test -x "$interpreter_path" || continue

        # skip if already identical
        if cmp "/usr/bin/$pythonX_Y" "$interpreter_path" >/dev/null 2>&1; then
            continue
        fi

        # hardlink or copy new interpreter
        cp -fpl "/usr/bin/$pythonX_Y" "$interpreter_path,new" \
            || cp -fp "/usr/bin/$pythonX_Y" "$interpreter_path,new" \
            || rm -f "$interpreter_path,new" \
            || true

        # make a backup (once)
        test -f "$interpreter_path,orig" || ln  "$interpreter_path" "$interpreter_path,orig"

        # atomic move
        if test -x "$interpreter_path,new" && mv "$interpreter_path,new" "$interpreter_path"; then
            echo "Successfully updated $interpreter_path"
        else
            echo >&2 "WARNING: Some error occured while updating $interpreter_path"
        fi
    done
}

# get manifest package data (makes this script work unchanged for any dh-virtualenv package)
pkgname=$(basename "$0"); pkgname=${pkgname%.postinst}
pythonX_Y=$(cd "$install_dir/$pkgname/lib" && ls -1d python[2-9].*[0-9] | tail -n1)

case "$1" in
    configure|reconfigure)
        $DEBUG echo "$0 $1 called with $# args:" "$@"
        safe_interpreter_update
        ;;

    triggered)
        $DEBUG echo "$0 $1 called with $# args:" "$@"
        for trigger in $2; do
            case "$trigger" in
                /usr/bin/python?.*)
                    # this trigger might be for the "wrong" interpreter (other version),
                    # but the "cmp" in "safe_interpreter_update" and the fact we only
                    # ever look at our own Python version catches that
                    safe_interpreter_update
                    ;;
                dh-virtualenv-interpreter-update)
                    safe_interpreter_update
                    ;;
                *)
                    echo >&2 "ERROR:" $(basename "$0") "called with unknown trigger '$2'"
                    exit 1
                    ;;
            esac;
        done;

        ;;

    abort-upgrade|abort-remove|abort-deconfigure)
        ;;

    *)
        echo >&2 "ERROR:" $(basename "$0") "called with unknown argument '$1'"
        exit 1
        ;;
esac

#DEBHELPER#

exit 0
